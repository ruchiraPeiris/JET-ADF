package enpit.sample.adf12.restadfbc.model.service.server.serviceinterface;

import enpit.sample.adf12.restadfbc.model.query.common.DepartmentsViewSDO;
import enpit.sample.adf12.restadfbc.model.query.common.EmployeesViewSDO;
import enpit.sample.adf12.restadfbc.model.service.HRAppModuleImpl;
import enpit.sample.adf12.restadfbc.model.service.common.serviceinterface.HRAppModuleService;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.LocalBean;
import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import javax.ws.rs.Consumes;
import javax.ws.rs.Produces;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ProcessControl;
import oracle.jbo.common.service.types.ProcessData;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 18 19:56:53 CEST 2013
// ---------------------------------------------------------------------
@Interceptors({ ServiceContextInterceptor.class })
@Stateless(name = "enpit.sample.adf12.restadfbc.model.service.common.HRAppModuleServiceBean",
           mappedName = "HRAppModuleServiceBean")
@Remote(HRAppModuleService.class)
@PortableWebService(targetNamespace = "/enpit/sample/adf12/restadfbc/model/service/common/",
                    serviceName = "HRAppModuleService", portName = "HRAppModuleServiceSoapHttpPort",
                    endpointInterface =
                    "enpit.sample.adf12.restadfbc.model.service.common.serviceinterface.HRAppModuleService")

public class HRAppModuleServiceImpl extends ServiceImpl implements HRAppModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public HRAppModuleServiceImpl() {
        init();
        setApplicationModuleDefName("enpit.sample.adf12.restadfbc.model.service.HRAppModule");
        setConfigurationName("HRAppModuleService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (HRAppModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("enpit/sample/adf12/restadfbc/model/service/common/serviceinterface/",
                                                "HRAppModuleService.xsd");
                _isInited = true;
            } catch (Throwable t) {
                ADFLogger.createADFLogger(Diagnostic.SERVINT_RT_LOGGER).severe(t);
            }
        }
    }


    /**
     * createDepartmentsView1: generated method. Do not modify.
     */
    public DepartmentsViewSDO createDepartmentsView1(DepartmentsViewSDO departmentsView1) throws ServiceException {
        return (DepartmentsViewSDO) create(departmentsView1, "DepartmentsView1");
    }

    /**
     * updateDepartmentsView1: generated method. Do not modify.
     */
    public DepartmentsViewSDO updateDepartmentsView1(DepartmentsViewSDO departmentsView1) throws ServiceException {
        return (DepartmentsViewSDO) update(departmentsView1, "DepartmentsView1");
    }


    /**
     * mergeDepartmentsView1: generated method. Do not modify.
     */
    public DepartmentsViewSDO mergeDepartmentsView1(DepartmentsViewSDO departmentsView1) throws ServiceException {
        return (DepartmentsViewSDO) merge(departmentsView1, "DepartmentsView1");
    }


    /**
     * getEmployeesView1: generated method. Do not modify.
     */
    public EmployeesViewSDO getEmployeesView1(Integer employeeId) throws ServiceException {
        return (EmployeesViewSDO) get(new Object[] { employeeId }, "EmployeesView1", EmployeesViewSDO.class);
    }

    /**
     * updateEmployeesView1: generated method. Do not modify.
     */
    public EmployeesViewSDO updateEmployeesView1(EmployeesViewSDO employeesView1) throws ServiceException {
        return (EmployeesViewSDO) update(employeesView1, "EmployeesView1");
    }

    /**
     * getDepartmentsView1: generated method. Do not modify.
     */
    public DepartmentsViewSDO getDepartmentsView1(Integer departmentId) throws ServiceException {
        return (DepartmentsViewSDO) get(new Object[] { departmentId }, "DepartmentsView1", DepartmentsViewSDO.class);
    }

    /**
     * findDepartmentsView1: generated method. Do not modify.
     */
    public List<DepartmentsViewSDO> findDepartmentsView1(FindCriteria findCriteria,
                                                         FindControl findControl) throws ServiceException {
        return (List<DepartmentsViewSDO>) find(findCriteria, findControl, "DepartmentsView1", DepartmentsViewSDO.class);
    }

    /**
     * createEmployeesView1: generated method. Do not modify.
     */
    public EmployeesViewSDO createEmployeesView1(EmployeesViewSDO employeesView1) throws ServiceException {
        return (EmployeesViewSDO) create(employeesView1, "EmployeesView1");
    }


    /**
     * mergeEmployeesView1: generated method. Do not modify.
     */
    public EmployeesViewSDO mergeEmployeesView1(EmployeesViewSDO employeesView1) throws ServiceException {
        return (EmployeesViewSDO) merge(employeesView1, "EmployeesView1");
    }

    /**
     * findEmployeesView1: generated method. Do not modify.
     */
    public List<EmployeesViewSDO> findEmployeesView1(FindCriteria findCriteria,
                                                     FindControl findControl) throws ServiceException {
        return (List<EmployeesViewSDO>) find(findCriteria, findControl, "EmployeesView1", EmployeesViewSDO.class);
    }
}

